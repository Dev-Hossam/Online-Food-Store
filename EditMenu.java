/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test1;

import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ahmed
 */
public class EditMenu extends javax.swing.JFrame {

    /**
     * Creates new form EditMenu
     */
    public EditMenu() {
        initComponents();
        setSize(500, 400);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        ItemField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        DescField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Edit Menu");

        jLabel2.setText("Choose Menu");

        jLabel3.setText("Item Menu");

        jLabel4.setText("Price");

        jLabel5.setText("Vegetarian");

        jLabel6.setText("Item Description");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cake", "Diner", "Dessert", "PancakeHouse" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        ItemField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemFieldActionPerformed(evt);
            }
        });

        DescField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("YES");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("NO");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ItemField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DescField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton2)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ItemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(DescField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         //TODO add your handling code here:
String name = ItemField.getText();
String priceStr = PriceField.getText();
double price = 0.0;

try {
    price = Double.parseDouble(priceStr);  // Make sure price is a valid number
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(this, "Invalid price format. Please enter a valid number.");
    return;  // Exit if the price is invalid
}

String desc = DescField.getText();
boolean isVegetarian = jRadioButton1.isSelected(); // Yes checkbox
String selectedMenu = (String) jComboBox1.getSelectedItem();

// Ensure that a menu is selected
if (selectedMenu == null || selectedMenu.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please select a menu.");
    return;
}

// Determine the table name based on the selected menu
String tableName = "";
switch (selectedMenu) {
    case "Cafe":
        tableName = "cafe_menu";
        break;
    case "Dessert":
        tableName = "dessert_menu";
        break;
    case "Diner":
        tableName = "diner_menu";
        break;
    case "PancakeHouseMenu":
        tableName = "pancake_house_menu";
        break;
    default:
        JOptionPane.showMessageDialog(this, "Invalid menu selected.");
        return;
}

try (Connection conn = DataBaseConnections.getConnection()) {
    // Build the DELETE SQL query with dynamic table name
    String sql = "DELETE FROM " + tableName + " WHERE name = '" + name + "' AND price = " + price + " AND vegetarian = " + isVegetarian;

    // Execute the query
    boolean success = conn.createStatement().execute(sql);  // Execute the query directly

    if (success) {
        JOptionPane.showMessageDialog(this, "Menu item deleted successfully from " + selectedMenu + " menu.");
    } else {
        JOptionPane.showMessageDialog(this, "No matching menu item found to delete.");
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Error with the database connection: " + ex.getMessage());
    Logger.getLogger(EditMenu.class.getName()).log(Level.SEVERE, null, ex);
}
this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemFieldActionPerformed

    private void DescFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescFieldActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    String name = ItemField.getText();
String pricestr = PriceField.getText();
double price = 0.0;

try {
    price = Double.parseDouble(pricestr);  // Make sure price is a valid number
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(this, "Invalid price format. Please enter a valid number.");
    return;  // Exit if the price is invalid
}

String desc = DescField.getText();
boolean isVegetarian = jRadioButton1.isSelected(); // Yes checkbox
String selectedMenu = (String) jComboBox1.getSelectedItem();
Connection dbConnection = null;

// Instead of creating objects that handle menus, execute SQL directly based on the selected menu
switch (selectedMenu) {
    case "Cafe": {
        // Directly execute the SQL for the "Cafe" menu
        String sql = "INSERT INTO cafe_menu (name, description, vegetarian, price) VALUES ('" 
                     + name + "', '" + desc + "', " + isVegetarian + ", " + price + ")";
        try (Connection conn = DataBaseConnections.getConnection()) {
            conn.createStatement().executeUpdate(sql);  // Execute the query directly
            JOptionPane.showMessageDialog(this, "Menu item added successfully to Cafe Menu.");
        } catch (SQLException ex) {
            Logger.getLogger(EditMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error adding menu item to Cafe Menu: " + ex.getMessage());
        }
        break;
    }

    case "Dessert": {
        // Directly execute the SQL for the "Dessert" menu
        String sql = "INSERT INTO dessert_menu (name, description, vegetarian, price) VALUES ('" 
                     + name + "', '" + desc + "', " + isVegetarian + ", " + price + ")";
        try (Connection conn = DataBaseConnections.getConnection()) {
            conn.createStatement().executeUpdate(sql);  // Execute the query directly
            JOptionPane.showMessageDialog(this, "Menu item added successfully to Dessert Menu.");
        } catch (SQLException ex) {
            Logger.getLogger(EditMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error adding menu item to Dessert Menu: " + ex.getMessage());
        }
        break;
    }

    case "Diner": {
        // Directly execute the SQL for the "Diner" menu
        String sql = "INSERT INTO diner_menu (name, description, vegetarian, price) VALUES ('" 
                     + name + "', '" + desc + "', " + isVegetarian + ", " + price + ")";
        try (Connection conn = DataBaseConnections.getConnection()) {
            conn.createStatement().executeUpdate(sql);  // Execute the query directly
            JOptionPane.showMessageDialog(this, "Menu item added successfully to Diner Menu.");
        } catch (SQLException ex) {
            Logger.getLogger(EditMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error adding menu item to Diner Menu: " + ex.getMessage());
        }
        break;
    }

    case "PancakeHouseMenu": {
        // Directly execute the SQL for the "PancakeHouseMenu" menu
        String sql = "INSERT INTO pancake_house_menu (name, description, vegetarian, price) VALUES ('" 
                     + name + "', '" + desc + "', " + isVegetarian + ", " + price + ")";
        try (Connection conn = DataBaseConnections.getConnection()) {
            conn.createStatement().executeUpdate(sql);  // Execute the query directly
            JOptionPane.showMessageDialog(this, "Menu item added successfully to Pancake House Menu.");
        } catch (SQLException ex) {
            Logger.getLogger(EditMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error adding menu item to Pancake House Menu: " + ex.getMessage());
        }
        break;
    }

    default:
        JOptionPane.showMessageDialog(this, "Please select a menu.");
        break;
}
this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
            this.dispose();
    // re-open the admin main menu (pass the real adminName if you have it)
            AdminGUI admin = new AdminGUI("SuperAdmin");
            admin.setLocationRelativeTo(null);
            admin.setVisible(true); 
    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField DescField;
    private javax.swing.JTextField ItemField;
    private javax.swing.JTextField PriceField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables
}
